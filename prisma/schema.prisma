// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  firstName    String?
  lastName     String?
  image        String?
  color        Int?
  profileSetup Boolean? @default(false)
  createdAt    DateTime @default(now())

  messagesSent     messages[] @relation("MessagesSent")
  messagesReceived messages[] @relation("MessagesReceived")

  channels      channel[] @relation("ChannelMembers")
  adminChannels channel[] @relation("ChannelAdmin")
}

model messages {
  id          String  @id @default(uuid())
  senderId    String
  recipientId String?
  channelId   String?

  messageType MessageType
  content     String?
  fileUrl     String?
  createdAt   DateTime    @default(now())

  sender    user     @relation("MessagesSent", fields: [senderId], references: [id])
  recipient user?    @relation("MessagesReceived", fields: [recipientId], references: [id])
  channel   channel? @relation("ChannelMessages", fields: [channelId], references: [id])
}

model channel {
  id       String     @id @default(uuid())
  name     String
  adminId  String
  admin    user       @relation("ChannelAdmin", fields: [adminId], references: [id])
  members  user[]     @relation("ChannelMembers")
  messages messages[] @relation("ChannelMessages")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MessageType {
  text
  file
  image
  video
}
